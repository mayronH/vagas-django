# Generated by Django 3.2 on 2021-05-08 13:58

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('is_company', models.BooleanField(default=False)),
                ('is_applicant', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Salary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('salary', models.CharField(max_length=200)),
            ],
            options={
                'verbose_name': 'Faixa Salarial',
                'verbose_name_plural': 'Faixas Salariais',
            },
        ),
        migrations.CreateModel(
            name='Schooling',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('schooling', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name': 'Nível de Escolaridade',
                'verbose_name_plural': 'Níveis de Escolaridade',
            },
        ),
        migrations.CreateModel(
            name='Applicant',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='vagas.customuser')),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name': 'Candidato',
                'verbose_name_plural': 'Candidatos',
            },
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='vagas.customuser')),
                ('name', models.CharField(max_length=255)),
                ('cnpj', models.CharField(max_length=14)),
            ],
            options={
                'verbose_name': 'Empresa',
                'verbose_name_plural': 'Empresas',
            },
        ),
        migrations.CreateModel(
            name='Opportunity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('requirements', models.TextField()),
                ('created_date', models.DateField(default=django.utils.timezone.now)),
                ('minimum_schooling', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vagas.schooling')),
                ('salary', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vagas.salary')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vagas', to='vagas.company')),
            ],
            options={
                'verbose_name': 'Vaga',
                'verbose_name_plural': 'Vagas',
            },
        ),
        migrations.CreateModel(
            name='Candidacy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('experiences', models.TextField()),
                ('created_date', models.DateField(default=django.utils.timezone.now)),
                ('salary_expectation', models.CharField(max_length=100)),
                ('opportunity', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='vaga', to='vagas.opportunity')),
                ('schooling', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='escolaridade', to='vagas.schooling')),
                ('applicant', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='candidato', to='vagas.applicant')),
            ],
        ),
    ]
